// Test Supabase notification storage directly
// This bypasses FCM to test if database storage is working

const { createClient } = require("@supabase/supabase-js");

const SUPABASE_URL = "https://gqsustjxzjzfntcsnvpk.supabase.co";
const SUPABASE_ANON_KEY =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imdxc3VzdGp4emp6Zm50Y3NudnBrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyMDg4NTgsImV4cCI6MjA1Njc4NDg1OH0.RCS_0fSVYnYVY2qr0Ow1__vBC4WRaVg_2SDatKREVHA";

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

console.log("üîß TESTING DIRECT SUPABASE NOTIFICATION STORAGE");
console.log("‚ïê".repeat(60));

async function testDirectSupabaseStorage() {
  try {
    console.log("ÔøΩ Testing notification retrieval (no auth needed)...");

    // Test reading existing notifications to verify connection
    const { data: notifications, error: readError } = await supabase
      .from("notifications")
      .select("*")
      .order("created_at", { ascending: false })
      .limit(10);

    if (readError) {
      console.error("‚ùå Failed to read notifications:", readError);
      console.log("\nüîç POSSIBLE ISSUES:");
      console.log("1. ‚ùå Supabase connection/authentication");
      console.log("2. ‚ùå Wrong table name");
      console.log("3. ‚ùå RLS (Row Level Security) blocking read access");
      return;
    }

    console.log("‚úÖ Successfully connected to Supabase!");
    console.log(`üìä Found ${notifications.length} notifications in database`);

    if (notifications.length > 0) {
      console.log("\nÔøΩ Recent notifications:");
      notifications.slice(0, 5).forEach((notif, index) => {
        const createdAt = new Date(notif.created_at).toLocaleString();
        console.log(
          `${index + 1}. ${notif.title} - ${notif.type} (${createdAt})`
        );
      });
    }

    console.log("\nüéØ DIAGNOSIS:");
    console.log("‚îÄ".repeat(40));
    console.log("‚úÖ Supabase connection: Working");
    console.log("‚úÖ Database access: Working");
    console.log("‚úÖ Notifications table: Exists and readable");

    console.log("\nüîç THE PROBLEM IS LIKELY:");
    console.log("‚îÄ".repeat(40));
    console.log(
      "‚ùå FCM handler in Flutter app is not calling _storeAnxietyAlertNotification()"
    );
    console.log("‚ùå _storeAnxietyAlertNotification() is failing silently");
    console.log(
      "‚ùå User authentication issue in Flutter (required for createNotification)"
    );

    console.log("\nüí° NEXT STEPS:");
    console.log("‚îÄ".repeat(40));
    console.log(
      "1. Check Flutter debug console when you receive FCM notifications"
    );
    console.log("2. Look for these messages:");
    console.log('   - "‚ö†Ô∏è Navigating to notifications from anxiety alert tap"');
    console.log('   - "‚úÖ Stored anxiety alert in Supabase"');
    console.log('   - "‚ùå Error storing anxiety alert notification"');
    console.log(
      "3. If no messages appear, the FCM handler condition might not be matching"
    );
  } catch (error) {
    console.error("‚ùå Test failed:", error);
  }
}

testDirectSupabaseStorage();
