/**
 * üìö FIREBASE DATABASE STRUCTURE EXPLAINED
 *
 * Complete breakdown of every node in your AnxieEase Firebase database
 * This explains what each part does and whether you need it
 */

console.log("\nüìö FIREBASE DATABASE STRUCTURE GUIDE");
console.log("====================================");

console.log("\nüèóÔ∏è  ROOT STRUCTURE:");
console.log("=================");
console.log(`
anxieease-sensors-default-rtdb/
‚îú‚îÄ‚îÄ devices/           ‚Üê Device data and assignments
‚îî‚îÄ‚îÄ users/             ‚Üê User profiles and sessions
`);

console.log("\nüì± DEVICES NODE - /devices/");
console.log("==========================");
console.log("PURPOSE: Manages wearable device data and assignments");

console.log("\n  üìü /devices/AnxieEase001/");
console.log("  ========================");
console.log("  ‚Ä¢ assignment/          ‚Üê WHO owns this device");
console.log("  ‚Ä¢ current/             ‚Üê LIVE sensor data");
console.log("  ‚Ä¢ history/             ‚Üê Historical data");
console.log("  ‚Ä¢ metadata/            ‚Üê Device info");

console.log("\n    üîê /devices/AnxieEase001/assignment/");
console.log("    ===================================");
console.log("    ‚úÖ ESSENTIAL - Controls device ownership");
console.log("    ");
console.log("    ‚Ä¢ assignedUser         ‚Üê Current owner USER ID");
console.log("    ‚Ä¢ activeSessionId      ‚Üê Current session ID");
console.log("    ‚Ä¢ assignedAt          ‚Üê When assignment was made");
console.log("    ‚Ä¢ assignedBy          ‚Üê Who/what made assignment");
console.log("    ‚Ä¢ deviceId            ‚Üê Device identifier");
console.log("    ‚Ä¢ status              ‚Üê 'active' or 'inactive'");
console.log("    ‚Ä¢ cleanedAt           ‚Üê When structure was cleaned");
console.log("    ‚Ä¢ cleanupReason       ‚Üê Why cleanup was done");
console.log("    ");
console.log("    üéØ CRITICAL: This determines who gets anxiety alerts!");

console.log("\n    üìä /devices/AnxieEase001/current/");
console.log("    ================================");
console.log("    ‚úÖ ESSENTIAL - Real-time sensor data");
console.log("    ");
console.log("    ‚Ä¢ heartRate           ‚Üê Current BPM (86.8)");
console.log("    ‚Ä¢ spo2                ‚Üê Oxygen saturation (98)");
console.log("    ‚Ä¢ bodyTemp            ‚Üê Body temperature (36.5¬∞C)");
console.log("    ‚Ä¢ battPerc            ‚Üê Battery level (79%)");
console.log("    ‚Ä¢ ambientTemp         ‚Üê Room temperature (25¬∞C)");
console.log("    ‚Ä¢ worn                ‚Üê Is device worn? (1=yes, 0=no)");
console.log("    ‚Ä¢ timestamp           ‚Üê When data was recorded");
console.log("    ‚Ä¢ deviceId            ‚Üê Device identifier");
console.log("    ‚Ä¢ sessionId           ‚Üê Current session");
console.log("    ");
console.log("    üéØ CRITICAL: This triggers anxiety detection!");

console.log("\n    üìö /devices/AnxieEase001/history/");
console.log("    ================================");
console.log("    ‚ö†Ô∏è  OPTIONAL - Historical sensor data");
console.log("    ");
console.log("    Contains timestamped sensor readings:");
console.log("    ‚Ä¢ 1758749443709       ‚Üê Timestamp key");
console.log("    ‚Ä¢ 1758749439383       ‚Üê Another timestamp");
console.log("    ‚Ä¢ ...                 ‚Üê More historical data");
console.log("    ");
console.log("    üí° Can be cleaned up periodically to save space");

console.log("\n    ‚öôÔ∏è  /devices/AnxieEase001/metadata/");
console.log("    ==================================");
console.log("    ‚úÖ ESSENTIAL - Device information");
console.log("    ");
console.log("    ‚Ä¢ status              ‚Üê Device status");
console.log("    ");
console.log("    üéØ Used for device management");

console.log("\nüë• USERS NODE - /users/");
console.log("=======================");
console.log("PURPOSE: User profiles, sessions, and personal data");

console.log("\n  üë§ /users/{USER_ID}/");
console.log("  ===================");
console.log("  Each user has their own isolated data:");

console.log("\n    üìä /users/{USER_ID}/baseline/");
console.log("    ============================");
console.log("    ‚úÖ ESSENTIAL - Personal anxiety thresholds");
console.log("    ");
console.log("    ‚Ä¢ heartRate           ‚Üê User's normal BPM (e.g., 70)");
console.log("    ‚Ä¢ timestamp           ‚Üê When baseline was set");
console.log("    ");
console.log("    üéØ CRITICAL: Determines when to trigger anxiety alerts!");
console.log("           If current HR > baseline + threshold ‚Üí Anxiety!");

console.log("\n    üö® /users/{USER_ID}/alerts/");
console.log("    ==========================");
console.log("    ‚úÖ ESSENTIAL - Anxiety notifications history");
console.log("    ");
console.log("    Contains all anxiety alerts for this user:");
console.log("    ‚Ä¢ alert_1758752734567 ‚Üê Individual alert");
console.log("    ‚Ä¢ alert_1758752756234 ‚Üê Another alert");
console.log("    ");
console.log("    Each alert contains:");
console.log("    ‚Ä¢ heartRate           ‚Üê BPM when alert triggered");
console.log("    ‚Ä¢ baseline            ‚Üê User's baseline at time");
console.log("    ‚Ä¢ severity            ‚Üê 'mild', 'moderate', 'severe'");
console.log("    ‚Ä¢ timestamp           ‚Üê When alert was sent");
console.log("    ‚Ä¢ deviceId            ‚Üê Which device detected it");
console.log("    ");
console.log("    üéØ CRITICAL: Shows anxiety history and patterns");

console.log("\n    üì± /users/{USER_ID}/fcmToken/");
console.log("    ============================");
console.log("    ‚úÖ ESSENTIAL - Push notification token");
console.log("    ");
console.log("    ‚Ä¢ 'cn2XBAlSTHCrCok...' ‚Üê Firebase Cloud Messaging token");
console.log("    ");
console.log("    üéØ CRITICAL: How user receives anxiety notifications!");

console.log("\n    üìù /users/{USER_ID}/sessions/");
console.log("    ============================");
console.log("    ‚úÖ ESSENTIAL - User activity tracking");
console.log("    ");
console.log("    ‚Ä¢ session_1758755656101/  ‚Üê Individual session");
console.log("      ‚Ä¢ metadata/             ‚Üê Session info");
console.log("        ‚Ä¢ deviceId            ‚Üê Which device used");
console.log("        ‚Ä¢ status              ‚Üê 'active' or 'ended'");
console.log("        ‚Ä¢ startTime           ‚Üê When session began");
console.log("        ‚Ä¢ endTime             ‚Üê When session ended");
console.log("      ‚Ä¢ data/                 ‚Üê Session sensor data");
console.log("    ");
console.log("    üéØ CRITICAL: Tracks user's device usage history");

console.log("\nüßπ WHAT TO KEEP vs REMOVE:");
console.log("===========================");

console.log("\n‚úÖ ESSENTIAL (KEEP):");
console.log("===================");
console.log("‚Ä¢ /devices/AnxieEase001/assignment/    ‚Üê Device ownership");
console.log("‚Ä¢ /devices/AnxieEase001/current/       ‚Üê Live sensor data");
console.log("‚Ä¢ /devices/AnxieEase001/metadata/      ‚Üê Device info");
console.log("‚Ä¢ /users/{USER_ID}/baseline/           ‚Üê Personal thresholds");
console.log("‚Ä¢ /users/{USER_ID}/alerts/             ‚Üê Anxiety history");
console.log("‚Ä¢ /users/{USER_ID}/fcmToken/           ‚Üê Push notifications");
console.log("‚Ä¢ /users/{USER_ID}/sessions/.../metadata/ ‚Üê Session info");

console.log("\n‚ö†Ô∏è  CAN CLEAN UP (OPTIONAL):");
console.log("============================");
console.log("‚Ä¢ /devices/AnxieEase001/history/       ‚Üê Old sensor data");
console.log("‚Ä¢ /users/{USER_ID}/sessions/.../data/  ‚Üê Detailed session data");
console.log(
  "‚Ä¢ Old ended sessions                   ‚Üê Sessions with status='ended'"
);

console.log("\n‚ùå SAFE TO REMOVE:");
console.log("==================");
console.log("‚Ä¢ Test user accounts:");
console.log("  - test-user-b-not-assigned");
console.log("  - e0997cb7-684f-41e5-929f-4480788d4ad0 (if not real user)");
console.log("‚Ä¢ Any sessions with status='ended' older than 30 days");
console.log("‚Ä¢ Device history older than 7 days");

console.log("\nüéØ CURRENT ACTIVE USERS:");
console.log("========================");
console.log("‚Ä¢ 5afad7d4-3dcd-4353-badb-4f155303419a ‚Üê Currently assigned");
console.log("‚Ä¢ 5efad7d4-3dcd-4333-ba4b-41f86c14a4f86 ‚Üê Has baseline data");

console.log("\nüí° CLEANUP RECOMMENDATIONS:");
console.log("============================");
console.log("1. Keep the current assigned user's data");
console.log("2. Remove test accounts and old sessions");
console.log("3. Archive device history older than 7 days");
console.log("4. Keep recent anxiety alerts for pattern analysis");

console.log("\nüèÜ YOUR DATABASE IS WELL ORGANIZED!");
console.log("===================================");
console.log("‚Ä¢ Clear device assignment structure");
console.log("‚Ä¢ Proper user isolation");
console.log("‚Ä¢ Complete anxiety detection data");
console.log("‚Ä¢ Ready for production use!");

console.log("\nüì± Want me to create a cleanup script for old data?");
